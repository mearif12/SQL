-- Revising The Select Query - I
SELECT * 
FROM CITY
WHERE POPULATION > 100000 AND COUNTRYCODE = 'USA';

-- Revising The Select Query - II
SELECT NAME
FROM CITY
WHERE POPULATION > 120000 AND COUNTRYCODE = 'USA';

-- Select All
SELECT * FROM CITY;

-- Select By ID
SELECT * 
FROM CITY
WHERE ID = 1661;

-- Japanese Cityes Attribute
SELECT *
FROM CITY
WHERE COUNTRYCODE = 'JPN';

-- Japanese Cityes Names
SELECT NAME
FROM CITY
WHERE COUNTRYCODE = 'JPN';

-- Weather Observation 1
SELECT CITY,STATE
FROM STATION;

-- Weather Observation 2
SELECT ROUND(SUM(LAT_N),2),ROUND(SUM(LONG_W),2)
FROM STATION;

-- Weather Observation 3
SELECT DISTINCT CITY 
FROM STATION
WHERE MOD(ID,2) = 0;

-- Weather Observation 4
SELECT COUNT(CITY) - COUNT(DISTINCT CITY)
FROM STATION;

-- Weather Observation 5
SELECT CITY, LENGTH(CITY)
FROM STATION
WHERE LENGTH(CITY) = (
    SELECT MIN(LENGTH(CITY)) FROM STATION
)
ORDER BY CITY
LIMIT 1;

SELECT CITY, LENGTH(CITY)
FROM STATION
WHERE LENGTH(CITY) = (
    SELECT MAX(LENGTH(CITY)) FROM STATION
)
ORDER BY CITY
LIMIT 1;

-- Weather Observation 6
SELECT DISTINCT CITY
FROM STATION
WHERE CITY LIKE 'A%'
  OR CITY LIKE 'E%'
   OR CITY LIKE 'I%'
    OR CITY LIKE 'O%'
     OR CITY LIKE 'U%';

-- Weather Observation 7
SELECT DISTINCT CITY 
FROM STATION
WHERE CITY LIKE '%a'
OR CITY LIKE '%e'
OR CITY LIKE '%i'
OR CITY LIKE '%o'
OR CITY LIKE '%u';

-- Weather Observation 8
SELECT DISTINCT CITY
FROM STATION
WHERE (CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%')
  AND (CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u');

-- Weather Observation 9
SELECT DISTINCT CITY
FROM STATION
WHERE CITY NOT LIKE 'A%'
AND CITY NOT LIKE 'E%'
AND CITY NOT LIKE 'I%'
AND CITY NOT LIKE 'O%'
AND CITY NOT LIKE 'U%';

-- Weather Observation 10
SELECT DISTINCT CITY 
FROM STATION
WHERE CITY NOT LIKE '%a'
AND CITY NOT LIKE '%e'
AND CITY NOT LIKE '%i'
AND CITY NOT LIKE '%o'
AND CITY NOT LIKE '%u';

-- Weather Observation 11
SELECT DISTINCT CITY 
FROM STATION
WHERE 
(CITY NOT LIKE 'A%' AND 
 CITY NOT LIKE 'E%' AND
 CITY NOT LIKE 'I%' AND
 CITY NOT LIKE 'O%' AND
 CITY NOT LIKE 'U%')
 OR
 (CITY NOT LIKE '%a' AND 
 CITY NOT LIKE '%e' AND
 CITY NOT LIKE '%i' AND
 CITY NOT LIKE '%o' AND
 CITY NOT LIKE '%u');

 -- Weather Observation 12
SELECT DISTINCT CITY 
FROM STATION
WHERE 
(CITY NOT LIKE 'A%' AND 
 CITY NOT LIKE 'E%' AND
 CITY NOT LIKE 'I%' AND
 CITY NOT LIKE 'O%' AND
 CITY NOT LIKE 'U%')
 AND
 (CITY NOT LIKE '%a' AND 
 CITY NOT LIKE '%e' AND
 CITY NOT LIKE '%i' AND
 CITY NOT LIKE '%o' AND
 CITY NOT LIKE '%u');

-- Weather Observation 13
SELECT TRUNCATE(SUM(LAT_N),4)
FROM STATION
WHERE LAT_N BETWEEN 38.7880 AND 137.2345;

-- Weather Observation 14
SELECT TRUNCATE(MAX(LAT_N),4)
FROM STATION
WHERE LAT_N < 137.2345;

-- Weather Observation 15
SELECT ROUND(LONG_W,4)
FROM STATION
WHERE LAT_N = 
(SELECT MAX(LAT_N) FROM STATION WHERE LAT_N < 137.2345);

-- Weather Observation 16
SELECT ROUND(MIN(LAT_N),4)
FROM STATION
WHERE LAT_N > 38.7780;

-- Weather Observation 17
SELECT ROUND(LONG_W, 4)
FROM STATION
WHERE LAT_N = (
  SELECT MIN(LAT_N)
  FROM STATION
  WHERE LAT_N > 38.7780
);

-- Weather Observation 18
SELECT ROUND((MAX(LAT_N)-MIN(LAT_N))+(MAX(LONG_W)-MIN(LONG_W)),4)
FROM STATION;   

-- Higher Than 75 Marks
SELECT Name
FROM STUDENTS
WHERE Marks > 75
ORDER BY RIGHT(Name,3),ID;

-- Employee Names
SELECT name
FROM Employee
ORDER BY Name;

-- Employee Salaries
SELECT name
FROM Employee
WHERE salary > 2000 AND months < 10
ORDER BY employee_id;

-- Type of Triangle
SELECT 
    CASE 
        WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle'
        WHEN A = B AND B = C THEN 'Equilateral'
        WHEN A = B OR A = C OR B = C THEN 'Isosceles'
        ELSE 'Scalene'
    END
FROM TRIANGLES;

-- BST
SELECT 
    N,
    CASE 
        WHEN P IS NULL THEN 'Root'
        WHEN N NOT IN (SELECT DISTINCT P FROM BST WHERE P IS NOT NULL) THEN 'Leaf'
        ELSE 'Inner'
    END
FROM BST
ORDER BY N;

-- Revising COUNT Function
SELECT COUNT(NAME)
FROM CITY
WHERE POPULATION > 100000;

-- Revising SUM Function
SELECT SUM(POPULATION)
FROM CITY
WHERE DISTRICT = 'California';

-- Average Population
SELECT ROUND(AVG(POPULATION))
FROM CITY;

-- The Blunder
SELECT CEIL(
    AVG(salary) - AVG(REPLACE(salary, '0', '') + 0)
) AS error_amount
FROM EMPLOYEES;

-- Eucledian Distance
SELECT 
  ROUND(
    SQRT(POW(MAX(LAT_N) - MIN(LAT_N), 2) + POW(MAX(LONG_W) - MIN(LONG_W), 2)), 
    4
  )
FROM STATION;

-- Top earners
SELECT 
    MAX(total_earning), 
    COUNT(*)
FROM (
    SELECT salary * months AS total_earning
    FROM Employee
)
WHERE total_earning = (
    SELECT MAX(salary * months)
    FROM Employee
);

-- Population Census
SELECT SUM(CITY.POPULATION)
FROM CITY JOIN COUNTRY
ON CITY.CountryCode = COUNTRY.Code
AND COUNTRY.CONTINENT = 'Asia';

-- African Cities
SELECT CITY.NAME
FROM CITY JOIN COUNTRY
ON CITY.COUNTRYCODE = COUNTRY.CODE
AND CONTINENT = 'Africa';

-- Average Population of Each Continent
SELECT COUNTRY.CONTINENT,FLOOR(AVG(CITY.POPULATION))
FROM CITY JOIN COUNTRY
ON  CITY.COUNTRYCODE = COUNTRY.CODE 
GROUP BY COUNTRY.CONTINENT;
